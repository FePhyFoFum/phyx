import sys
import os
import subprocess

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def test_program(name):
    x = None
    t = None
    print "TESTING",name
    if name == "pxlstr":
        cm = "./pxlstr -t TEST/test.tre"
        t = 'tree #: 0\nrooted: true\nbinary: true\nnterminal: 5\nninternal: 4\nbranch lengths: true\nrttipvar: 0.004634\ntreelength: 1.595\nultrametric: false\nrootheight: NA\n'
    elif name == "pxlssq":
        cm = "./pxlssq -s TEST/test.fa"
        t = 'File type: fasta\nNumber of sequences: 5\nIs aligned: true\nSequence length: 20\n--------Nucl TABLE---------\nNucl   Total      Proportion\nA      20         0.2\nC      37         0.37\nG      18         0.18\nT      25         0.25\n-      0          0\nN      0          0\nG+C    55         0.55\n--------Nucl TABLE---------\n'
    elif name == "pxbp":
        cm = "./pxbp -t TEST/test.tre"
        t = '1 trees \n3 unique clades found\nTaxonA TaxonB \t1\nTaxonA TaxonB TaxonC \t1\nTaxonD TaxonE \t1\nTSCA: 0\n'
    elif name == "pxbdfit":
        cm = "./pxbdfit -t TEST/ultra_100.tre"
        t = 'ntips: 10\nnspeciation: 8\ntreelength: 8.67581\nrootheight: 1.74148\nmodel: bd\nlikelihood: 4.18076\naic: -4.36152\naicc: -2.64723\nb: 1.05759\nd: 0.319273\nr (b-d): 0.738315\ne (d/b): 0.301888\n'
    elif name == "pxtscale":
        cm = "./pxtscale -t TEST/test.tre -s 10"
        t = '(((TaxonA:1,TaxonB:0.2999999999999999889):1.25,TaxonC:2.5):4,(TaxonD:2.3000000000000002665,TaxonE:1.6000000000000000888):3);\n'
    elif name == "pxupgma":
        cm = "./pxupgma -s TEST/test.fa"
        t = 'TaxonA\tTaxonB\tTaxonC\tTaxonD\tTaxonE\t\nTaxonA\t0\t18\t12\t14\t14\t\nTaxonB\t18\t0\t16\t16\t14\t\nTaxonC\t12\t16\t0\t15\t15\t\nTaxonD\t14\t16\t15\t0\t9\t\nTaxonE\t14\t14\t15\t9\t0\t\n(((TaxonA:6.000000,TaxonC:6.000000):1.250000,(TaxonD:4.500000,TaxonE:4.500000):2.750000):0.750000,TaxonB:8.000000);\n'
    elif name == "pxs2phy":
        cm = "./pxs2phy -s TEST/test.fa"
        t = '5 20\nTaxonA\tAAATTTCCCTGTCCCTTTAA\nTaxonB\tGCTCGAGGGGCCCCAAGACC\nTaxonC\tACGCTCCCCCTTAAAAATGA\nTaxonD\tTCCTTGTTCAACTCCGGTGG\nTaxonE\tTTACTATTCCCCCCCGCCGG\n'
    elif name == "pxfqfilt":
        cm = "./pxfqfilt -m 20 -s TEST/test.fastq | wc -l"
        t = "3872\n"
    elif name == "pxs2nex":
        cm = "./pxs2nex -s TEST/test.fa"
        t = '#NEXUS\nBEGIN DATA;\n\tDIMENSIONS NTAX=5 NCHAR=20;\n\tFORMAT DATATYPE=DNA INTERLEAVE=NO GAP=-;\n\tMATRIX\n\nTaxonA\tAAATTTCCCTGTCCCTTTAA\nTaxonB\tGCTCGAGGGGCCCCAAGACC\nTaxonC\tACGCTCCCCCTTAAAAATGA\nTaxonD\tTCCTTGTTCAACTCCGGTGG\nTaxonE\tTTACTATTCCCCCCCGCCGG\n;\nend;\n\n'
    elif name == "pxnw":
        cm = "./pxnw -s TEST/test.fa | grep TaxonA | grep TaxonB"
        t = 'TaxonA\tTaxonB\t40\n'
    elif name == "pxrecode":
        cm = "./pxrecode -s TEST/test.fa"
        t = '>TaxonA\nRRRYYYYYYYRYYYYYYYRR\n>TaxonB\nRYYYRRRRRRYYYYRRRRYY\n>TaxonC\nRYRYYYYYYYYYRRRRRYRR\n>TaxonD\nYYYYYRYYYRRYYYYRRYRR\n>TaxonE\nYYRYYRYYYYYYYYYRYYRR\n'
    elif name == "pxsw":
        cm = "./pxsw -s TEST/test.fa | grep TaxonA | grep TaxonB"
        t = 'TaxonA\tTaxonB\t40\n'
    elif name == "pxrms":
        cm = "./pxrms -s TEST/test.fa -n TaxonA"
        t = '>TaxonB\nGCTCGAGGGGCCCCAAGACC\n>TaxonC\nACGCTCCCCCTTAAAAATGA\n>TaxonD\nTCCTTGTTCAACTCCGGTGG\n>TaxonE\nTTACTATTCCCCCCCGCCGG\n'
    elif name == "pxboot":
        cm = "./pxboot -s TEST/test.fa -x 1 | grep -c \>"
        t = '5\n'
    elif name == "pxrevcomp":
        cm = "./pxrevcomp -s TEST/test.fa"
        t = '>TaxonA\nTTAAAGGGACAGGGAAATTT\n>TaxonB\nGGTCTTGGGGCCCCTCGAGC\n>TaxonC\nTCATTTTTAAGGGGGAGCGT\n>TaxonD\nCCACCGGAGTTGAACAAGGA\n>TaxonE\nCCGGCGGGGGGGAATAGTAA\n'
    elif name == "pxt2new":
        cm = "./pxt2new -t TEST/test_nexus.tre"
        t = '(((TaxonA:0.10000000000000000555,TaxonB:0.02999999999999999889):0.125,TaxonC:0.25):0.4000000000000000222,(TaxonD:0.23000000000000000999,TaxonE:0.16000000000000000333):0.2999999999999999889);\n'
    elif name == "pxbdsim":
        cm = "./pxbdsim -e 5 -x 1 | grep -o taxon | wc -l"
        t = '5\n'
    elif name == "pxs2fa":
        cm = "./pxs2fa -s TEST/Concat_Sequence2.NEX"
        t = '>Sequence1\nAAATTTCCCTTTCCCTTTAAA\n>Sequence2\nGGGGGGGGGGCCCCCCCCCCA\n>Sequence3\nCCCCCCCCCCCCAAAAAAAAA\n>Sequence9\nAAATTTCCCTTTCCCTTTAAA\n>Sequence10\nGGGGGGGGGGCCCCCCCCCCA\n>Sequence11\nCCCCCCCCCCCCAAAAAAAAA\n>Sequence8\nTTTTTTTTCCCCCCCGGGGGA\n'
    elif name == "pxrr":
        cm = "./pxrr -t TEST/test.tre -g TaxonA"
        t = '(TaxonA:0.050000000000000002776,(TaxonB:0.02999999999999999889,((TaxonD:0.23000000000000000999,TaxonE:0.16000000000000000333):0.69999999999999995559,TaxonC:0.25):0.125):0.050000000000000002776);\n'
    elif name == "pxnj":
        cm = "./pxnj -s TEST/test.fa"
        t = '((((TaxonA:0.300000,TaxonC:0.300000):0.112500,TaxonB:0.437500):0.087500,TaxonD:0.250000):0.100000,TaxonE:0.100000);\n'
    elif name == "pxconsq":
        cm = "./pxconsq -s TEST/test.fa"
        t = '>consensus\nRHNYKNBBSNNYHMMRNHVV\n'
    elif name == "pxseqgen":
        cm = "./pxseqgen -t TEST/test.tre -x 1 -l 1"
        t = '>TaxonE\nT\n>TaxonD\nT\n>TaxonC\nA\n>TaxonB\nT\n>TaxonA\nA\n'
    elif name == "pxrmt":
        cm = "./pxrmt -t TEST/test.tre -n TaxonA"
        t = '((TaxonC:0.25,TaxonB:0.15499999999999999889):0.4000000000000000222,(TaxonD:0.23000000000000000999,TaxonE:0.16000000000000000333):0.2999999999999999889);\n'
    elif name == "pxcat":
        cm = "./pxcat -s TEST/test.fa TEST/test.fa"
        t = '>TaxonA\nAAATTTCCCTGTCCCTTTAAAAATTTCCCTGTCCCTTTAA\n>TaxonB\nGCTCGAGGGGCCCCAAGACCGCTCGAGGGGCCCCAAGACC\n>TaxonC\nACGCTCCCCCTTAAAAATGAACGCTCCCCCTTAAAAATGA\n>TaxonD\nTCCTTGTTCAACTCCGGTGGTCCTTGTTCAACTCCGGTGG\n>TaxonE\nTTACTATTCCCCCCCGCCGGTTACTATTCCCCCCCGCCGG\n'
    elif name == "pxtlate":
        cm = "./pxtlate -s TEST/trlateTest.fa"
        t = '>Sequence1\nKFKPG*X\n>Sequence2\nKPGKI*\n>Sequence3\nIYIYIL\n'
    elif name == "pxcontrates":
        cm = "./pxcontrates -c TEST/contrates_file.txt -t TEST/contrates_tree.tre"
        t = '#nexus\nbegin trees;\ntree tree0 = ((((s1[&value=100.000000000]:0.36035534310000000291,s2[&value=100.000000000]:0.36035534310000000291)[&value=100.892126]:0.89687828619999998558,s3[&value=120.000000000]:1.2572336289999999082)[&value=105.332899]:0.42075465919999999187,(((s4[&value=110.000000000]:0.11903321910000000394,s5[&value=80.000000000]:0.11903321910000000394)[&value=93.9521533]:0.025441717459999999007,s6[&value=90.000000000]:0.14447493659999999238)[&value=93.5042275]:0.76476400190000004553,s7[&value=100.000000000]:0.90923893850000003791)[&value=98.5891142]:0.76874934999999999796)[&value=102.507614]:0.063491588919999994434,((s8[&value=100.000000000]:0.31068892650000001776,s9[&value=100.000000000]:0.31068892650000001776)[&value=100.154669]:0.10315082489999999327,s10[&value=100.000000000]:0.41383975140000001103)[&value=100.257371]:1.3276401259999999205)[&value=102.404913];\ntree tree1 = ((((s1[&value=19.000000000]:0.36035534310000000291,s2[&value=18.000000000]:0.36035534310000000291)[&value=18.0869864]:0.89687828619999998558,s3[&value=17.000000000]:1.2572336289999999082)[&value=16.0311106]:0.42075465919999999187,(((s4[&value=16.000000000]:0.11903321910000000394,s5[&value=15.000000000]:0.11903321910000000394)[&value=15.0805256]:0.025441717459999999007,s6[&value=14.000000000]:0.14447493659999999238)[&value=14.9012118]:0.76476400190000004553,s7[&value=13.000000000]:0.90923893850000003791)[&value=14.2816149]:0.76874934999999999796)[&value=14.7423774]:0.063491588919999994434,((s8[&value=12.000000000]:0.31068892650000001776,s9[&value=11.000000000]:0.31068892650000001776)[&value=11.3889822]:0.10315082489999999327,s10[&value=10.000000000]:0.41383975140000001103)[&value=11.3152649]:1.3276401259999999205)[&value=14.5859631];\ntree tree2 = ((((s1[&value=20.000000000]:0.36035534310000000291,s2[&value=20.000000000]:0.36035534310000000291)[&value=20]:0.89687828619999998558,s3[&value=20.000000000]:1.2572336289999999082)[&value=20]:0.42075465919999999187,(((s4[&value=20.000000000]:0.11903321910000000394,s5[&value=20.000000000]:0.11903321910000000394)[&value=20]:0.025441717459999999007,s6[&value=20.000000000]:0.14447493659999999238)[&value=20]:0.76476400190000004553,s7[&value=20.000000000]:0.90923893850000003791)[&value=20]:0.76874934999999999796)[&value=20]:0.063491588919999994434,((s8[&value=20.000000000]:0.31068892650000001776,s9[&value=20.000000000]:0.31068892650000001776)[&value=20]:0.10315082489999999327,s10[&value=20.000000000]:0.41383975140000001103)[&value=20]:1.3276401259999999205)[&value=20];\nend;\n\n'
    elif name == "pxmrca":
        cm = "./pxmrca -t TEST/mrca_test.tre -m TEST/mrca.txt"
        t = 'KIM 50 \nLEE 11 \nTHURSTON 2 \n'
    elif name == "pxmrcacut":
        cm = "./pxmrcacut -t TEST/mrca_test.tre -m TEST/mrca.txt"
        t = '((((s19:8.9192294969999998955,s21:8.9192294939999996473):19.95224960999999908,(((s28:1.9460922439999999156,(s29:1.0875761909999999144,(s30:0.89291712800000000438,s31:0.89291712800000000438):0.1946590628000000045):0.85851605259999996811):8.3971209000000008871,s32:10.343213150000000411):11.095432569999999828,((s33:7.2263048049999998312,((s34:2.6703496819999998912,s35:2.6703496819999998912):2.2229339779999999216,s36:4.8932836599999998128):2.3330211450000000184):7.1928712350000001408,((s38:0.64219284539999998973,s39:0.64219284539999998973):0.026374224099999999532,s40:0.66856706949999999967):13.750608970000000042):7.0194696820000004323):7.4328333889999997908):9.4218491340000003476,(((s46:12.201041119999999296,s49:12.201041119999999296):6.604755154000000239,(s51:5.415238384000000238,s52:5.415238384000000238):13.390557890000000185):7.9737073949999999201,s56:26.779503670000000426):11.513824579999999642):38.8094614199999981,(((((s87:3.6908438889999999333,s88:3.6908438889999999333):11.450733709999999732,(((s90:4.7201172930000003802,(s91:3.9975684220000000657,s92:3.9975684220000000657):0.72254887099999998146):1.5459479199999999199,(s93:2.1981845510000002086,s94:2.1981845510000002086):4.0678806630000003963):0.40424694570000002658,s95:6.6703121569999996865):8.4712654399999998134):12.393069060000000192,((s98:5.0744154459999997187,s100:5.0744154459999997187):14.972703170000000839,s104:20.047118619999999112):7.4875280369999996921):20.733653700000001407,s126:48.268300349999996968):16.541938389999998549,((((s133:19.194524080000000765,(s135:5.4586278740000002685,(s136:0.5006869268000000428,s137:0.5006869268000000428):4.9579409449999998216):13.73589620999999994):8.3350646560000001273,s140:27.529588740000001224):2.2861742469999999372,((s151:16.862653529999999336,((s153:3.929431493000000053,s154:3.929431493000000053):0.58952085890000005541,(s155:4.4774633660000002777,(s156:2.7123332000000002218,s157:2.7123332000000002218):1.765130166000000056):0.041488986419999998589):12.343701169999999223):11.437733610000000439,s162:28.300387140000001551):1.515375848999999997):2.6277221590000001683,((s169:7.8409351410000001081,s170:7.8409351410000001081):7.5946375750000001403,(s172:13.329860059999999677,(s173:6.7214149780000003176,((s174:0.30807071029999999467,s175:0.30807071029999999467):4.1074336630000001236,s177:4.4155043730000000934):2.3059106030000000587):6.6084450869999997735):2.1057126570000002097):17.007912430000001081):32.366753600000002677):12.292550920000000048);\n((((((s283:0.49950781950000000542,s284:0.49950781950000000542):2.3766585789999998823,s285:2.8761663990000001512):13.275750099999999776,s286:16.151916490000001403):14.555233230000000688,(s288:9.130600983000000781,(s289:5.3395037639999998191,s290:5.3395037639999998191):3.7910972179999999909):21.576548739999999782):2.471388135000000208,((s292:0.10949029849999999953,s293:0.10949029849999999953):21.110084839999998962,s296:21.219575139999999891):11.958962720000000601):12.972100010000000125,s307:46.150637869999997065);\n(s19:8.9192294969999998955,s21:8.9192294939999996473);\n'
    elif name == "pxmrcaname":
        cm = "./pxmrcaname -t TEST/mrca_test.tre -m TEST/mrca.txt"
        t = '(((((s19:8.9192294969999998955,s21:8.9192294939999996473)THURSTON:19.95224960999999908,(((s28:1.9460922439999999156,(s29:1.0875761909999999144,(s30:0.89291712800000000438,s31:0.89291712800000000438):0.1946590628000000045):0.85851605259999996811):8.3971209000000008871,s32:10.343213150000000411):11.095432569999999828,((s33:7.2263048049999998312,((s34:2.6703496819999998912,s35:2.6703496819999998912):2.2229339779999999216,s36:4.8932836599999998128):2.3330211450000000184):7.1928712350000001408,((s38:0.64219284539999998973,s39:0.64219284539999998973):0.026374224099999999532,s40:0.66856706949999999967):13.750608970000000042):7.0194696820000004323):7.4328333889999997908):9.4218491340000003476,(((s46:12.201041119999999296,s49:12.201041119999999296):6.604755154000000239,(s51:5.415238384000000238,s52:5.415238384000000238):13.390557890000000185):7.9737073949999999201,s56:26.779503670000000426):11.513824579999999642):38.8094614199999981,(((((s87:3.6908438889999999333,s88:3.6908438889999999333):11.450733709999999732,(((s90:4.7201172930000003802,(s91:3.9975684220000000657,s92:3.9975684220000000657):0.72254887099999998146):1.5459479199999999199,(s93:2.1981845510000002086,s94:2.1981845510000002086):4.0678806630000003963):0.40424694570000002658,s95:6.6703121569999996865):8.4712654399999998134):12.393069060000000192,((s98:5.0744154459999997187,s100:5.0744154459999997187):14.972703170000000839,s104:20.047118619999999112):7.4875280369999996921):20.733653700000001407,s126:48.268300349999996968):16.541938389999998549,((((s133:19.194524080000000765,(s135:5.4586278740000002685,(s136:0.5006869268000000428,s137:0.5006869268000000428):4.9579409449999998216):13.73589620999999994):8.3350646560000001273,s140:27.529588740000001224):2.2861742469999999372,((s151:16.862653529999999336,((s153:3.929431493000000053,s154:3.929431493000000053):0.58952085890000005541,(s155:4.4774633660000002777,(s156:2.7123332000000002218,s157:2.7123332000000002218):1.765130166000000056):0.041488986419999998589):12.343701169999999223):11.437733610000000439,s162:28.300387140000001551):1.515375848999999997):2.6277221590000001683,((s169:7.8409351410000001081,s170:7.8409351410000001081):7.5946375750000001403,(s172:13.329860059999999677,(s173:6.7214149780000003176,((s174:0.30807071029999999467,s175:0.30807071029999999467):4.1074336630000001236,s177:4.4155043730000000934):2.3059106030000000587):6.6084450869999997735):2.1057126570000002097):17.007912430000001081):32.366753600000002677):12.292550920000000048)KIM:22.897210330000000056,((((((((s213:0.20297418419999999073,s214:0.20297418419999999073):12.716102810000000645,((s216:5.6164296230000001486,(s218:3.7133940970000001158,s219:3.7133940970000001158):1.9030355269999998935):3.1149687089999997802,(s221:4.9410893590000002362,s222:4.9410893610000004017):3.7903089730000001367):4.1876786619999997185):2.7811719639999998854,s224:15.700248959999999698):8.1136411430000006106,(s228:16.403987719999999939,s229:16.403987719999999939):7.4099023769999998734):20.193931890000001772,(((s235:1.1647619609999999568,s237:1.1647619609999999568):30.92897798999999992,(((s239:11.809203410000000289,(s240:1.1451934539999999441,s241:1.1451934539999999441):10.664009959999999566):6.4760607239999998797,(s243:5.3663286640000000816,s244:5.3663286640000000816):12.918935480000000027):0.58795460539999999661,((s246:1.0213854540000000259,s247:1.0213854540000000259):2.2789929720000001723,s248:3.3003784249999998934):15.572840319999999181):13.220521209999999357):1.9422983140000000812,((((s252:0.89098380509999997034,s253:0.89098380509999997034):1.4460778729999999026,(s254:0.53647671720000000839,s255:0.53647671720000000839):1.8005849609999999839):0.53514565960000004541,s256:2.8722073379999999432):1.8723211109999999824,s257:4.7445284489999997035):29.291509810000000869):9.9717837229999997106):17.839297959999999676,(s266:27.929393990000001224,(s268:4.2347317469999996575,s269:4.2347317469999996575):23.694662239999999542):33.917725959999998508):17.52852757000000139,(((((((s283:0.49950781950000000542,s284:0.49950781950000000542):2.3766585789999998823,s285:2.8761663990000001512):13.275750099999999776,s286:16.151916490000001403):14.555233230000000688,(s288:9.130600983000000781,(s289:5.3395037639999998191,s290:5.3395037639999998191):3.7910972179999999909):21.576548739999999782):2.471388135000000208,((s292:0.10949029849999999953,s293:0.10949029849999999953):21.110084839999998962,s296:21.219575139999999891):11.958962720000000601):12.972100010000000125,s307:46.150637869999997065)LEE:9.3515165059999993957,(s325:1.5758250609999999714,s326:1.5758250609999999714):53.926329320000000678):23.873493140000000778):10.771398910000000271,(((s340:9.9405505230000006378,s341:9.9405505230000006378):21.029577369999998382,((s345:9.0691226749999991341,s347:9.0691226769999992996):1.9682665619999999418,(s348:7.1978738189999997843,s350:7.1978738189999997843):3.8395154179999999577):19.932738659999998276):45.330191679999998655,(s381:4.5261479199999996581,s382:4.5261479199999996581):71.774171659999993267):13.846726849999999587):9.8529535619999997209);\n'            
    elif name == "pxvcf2fa":
        cm = "./pxvcf2fa -s TEST/vcf_file"
        t = '>APC1\nCACCCCATTCTCGCATCATCCAACGCCCACGAAGCATTATGACCGGTACGCGCCCTGGTCGCCGCGGGCGTCGACCCCC\n>APC2\nCGCCCCATTCTCGCATCATCCAACGCCCACGAAGCATTAGGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>GPC1\nCGCCCCCTTCTCGCACCATCCAACGCCCACGAAGCATTAGGACCGGTACGCGCCCTGGTCGCCTCGGGCGCCAACCCCC\n>GPC2\nCGCCCCCTTCTCGCACCACCCAACGCCCACGAAGCATTATGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>GPC3\nCACCCCCTTCTCGCACCATCCAACGCCCACGAAGCATTATGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCGACCCCC\n>GPCREF\nCGCCCCCTTCTCGCACCATCCAACGCCCACGAAGCATTATGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCGACCCCC\n>HH1\nCACCCCCTTCTCGCATCATCCAACGCCCACGAAGCATTAGGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>HH2\nCACCCCCTTCTCGCATCACCCAACGCCCACGAAGCATTAGGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>HH3\nCACCCCCTTCTCGCATCACCCAACGCCCACGAAGTATTAGGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>HH4\nCACCCCCTTCTCGCACCATCCAACGCCCACGAAGCATTATGACCGGTACGCGTCCTGGTCGCCGCGGGCGCCAACCCCC\n>HH5\nCACCTCCTTCTCGCATCACCCAACGCCCACGAAGCATTAGGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>LPC1\nCGCCCCATTCTCGCACCATCCAACGCCCACGAGGTATTATGACCGGTACGCGCCCTGGTCGCCTCGGGCGCCAGCCCCC\n>LPC2\nCGCCCCATTCTCGCACCACCCAACGCCCACGAAGCATTAGGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>QHH1\nCACTTCCTTCTCGCTCCGTCCGACATCTACGGAGCATCGTGACTGGCACACGTCCTGATCGCTTCAGACGCTAACCCCT\n>QHH2\nTGCCCCCTTCTCACACTATCTAATGTTCACAAAGCACTAGAACCGGTACGCGCCTTGGTCACCGTGAGCGCCGACTTCC\n>QHH3\nCACCCTCCTCTCGCATCATCCAACGCCCACGAAGTATTAGGACCGGTCCGCGCCCTAGTCGCCGCGGGTGCCAACCCTC\n>QHH4\nCGTCCCCTTTTCGCACCATTCAACGCCCACGAAACATTAGGATCGGTATGTGCCCTGGCTGCCGCGGGCACCAATCCCC\n>STG1\nCGCCCCCTCCTCGCACCATCCAACGCCCATGAAGTATCATGACCGGTACGCACCCTGGTCGCCTCGGGCGCCAACCCCC\n>STG2\nCGCCCCCTCCTCGCACCATCCAACGCCCGTGAAGCATCGTGACCGGTACGCGCCCTGGTCGCCGCGGGCGCCAACCCCC\n>GNNSN\nCGCCCCCTTCCAGTACCATCCAGCGCCCACGAAGCGTTATGGCCAATACGCGCTCCGGTCGTCGCGGGCGCCGACCCCC\n'
    elif name == "pxrlt":
        cm = "./pxrlt -t TEST/kingdoms.tre -c TEST/kingdoms.oldnames.txt -n TEST/kingdoms.newnames.txt"
        t = '(Eubacteria:4200,(Archaea:3806.0102499999998145,((((SAR:1626.0427319999998872,Plant:1626.0276670000000649):72.380183999999999855,Excavata:1698.4229159999999865):74.73121999999999332,Amoebozoa:1773.1541360000001077):7.9375349999999995632,(Animal:1295.717544000000089,Fungi:1295.7033610000000863):485.3800600000000145):2024.9200000000000728):394);\n'
    elif name == "pxstrec":
        cm = "./pxstrec -t TEST/test.strec.tre -d TEST/test.data.narrow -c TEST/test.conf | tail -1"
        t = '0.316161 \n'
    else:
        return
    p = subprocess.Popen(cm,shell=True,stdout=subprocess.PIPE)
    x = p.communicate()
    #print x
    x = x[0].lstrip()
    if x == t:
        print bcolors.OKBLUE+"PASSED"+bcolors.ENDC
        return True
    else:
        print bcolors.FAIL+"FAILED"+bcolors.ENDC
        print "intended output:",t
        print "your output:",x
        return False

# this are skipped in the testing because they are preliminary, tests will
# be added as they become more permanent.
notest = ["pxclsq","pxbpsq","pxaa2cdn","pxlog","pxrls"]

if __name__ == "__main__":
    if len(sys.argv) != 1:
        print "python run_tests.py"
        sys.exit(0)
    
    passed = 0
    failed = 0
    failedl = []
    print "================="
    for i in os.listdir("."):
        if i[:2] == "px":
            if i in notest:
                continue
            t = test_program(i)
            if t == True:
                passed += 1
            elif t == False:
                failed += 1
                failedl.append(i)
            else:
                print bcolors.WARNING+"no test for "+i+bcolors.ENDC
            print "================="
    print "PASSED TESTS:",passed
    print "FAILED TESTS:",failed
    if failed > 0:
        print "These failed:"
        print "\t",",".join(failedl)
